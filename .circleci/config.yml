# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout
# GIT UPGRADE CHROME TO LATEST VERSION AFTER CLEANING PACKAGE REPO
      - run:
          name: Setup CI Environment
          command: |
            sudo apt-get update
            sudo apt-get install libgconf2-4 libnss3-1d libxss1
            sudo apt-get clean
            sudo mv /var/lib/apt/lists /tmp
            sudo mkdir -p /var/lib/apt/lists/partial
            sudo apt-get clean
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get install dpkg
            sudo wget http://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_75.0.3770.142-1_amd64.deb
            sudo dpkg -i google-chrome-stable_75.0.3770.142-1_amd64.deb
            google-chrome --version

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: 'Run unit test'
          command: 'npm run test'
      
      - run:
          name: 'Run Protractor'
          command: 'npm run e2e'

      - run:
          name: 'Build Project'
          command: 'npm run build:prod'

      - run:
          name: 'Deploy to Firebase hosting'
          command: './node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN'